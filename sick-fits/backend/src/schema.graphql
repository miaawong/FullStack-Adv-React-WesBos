# import * from './generated/prisma.graphql'
# ^^ importing files in graphql
type SuccessMessage {
    message: String
}

type Mutation {
    createItem(
        title: String
        description: String
        price: Int
        image: String
        largeImage: String
    ): Item!
    updateItem(id: ID!, title: String, description: String, price: Int): Item!
    deleteItem(id: ID!): Item
    signUp(email: String!, password: String!, name: String!): User!
    signIn(email: String!, password: String!): User!
    # successmessage is not tied to prisma
    # but we can return a custom type
    signOut: SuccessMessage
    requestReset(email: String!): SuccessMessage
    resetPassword(
        resetToken: String!
        password: String!
        confirmPassword: String!
    ): User!
}

type Query {
    # add arguments, where: searching, orderby: most recent, first and skip: skip the first 4, but bring back 4 items in total
    items(
        where: ItemWhereInput
        orderBy: ItemOrderByInput
        skip: Int
        first: Int
    ): [Item]!
    #  an input that passes us an id, can be found in prisma.graphql file
    item(where: ItemWhereUniqueInput!): Item
    itemsConnection(where: ItemWhereInput): ItemConnection!
    # for current user
    me: User
}
# we are redefing User becuz the password, resetToken, and tokenexpiry cannot
# be not included because we don't want it to leak over on the frontend
type User {
    id: ID!
    name: String!
    email: String!
    permissions: [Permission!]!
}
